{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/fin-ash/MAIR/blob/main/Project%202%20-%20Evaluation%20of%20GAN%20on%20image%20classification%20\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "collapsed": true,
        "id": "jQQBUSuIJLPP",
        "outputId": "f5289b0f-11f7-46ca-899a-091c8fa16ed8"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Collecting datasets\n",
            "  Downloading datasets-2.20.0-py3-none-any.whl.metadata (19 kB)\n",
            "Requirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from datasets) (3.15.4)\n",
            "Requirement already satisfied: numpy>=1.17 in /usr/local/lib/python3.10/dist-packages (from datasets) (1.25.2)\n",
            "Collecting pyarrow>=15.0.0 (from datasets)\n",
            "  Downloading pyarrow-17.0.0-cp310-cp310-manylinux_2_28_x86_64.whl.metadata (3.3 kB)\n",
            "Requirement already satisfied: pyarrow-hotfix in /usr/local/lib/python3.10/dist-packages (from datasets) (0.6)\n",
            "Collecting dill<0.3.9,>=0.3.0 (from datasets)\n",
            "  Downloading dill-0.3.8-py3-none-any.whl.metadata (10 kB)\n",
            "Requirement already satisfied: pandas in /usr/local/lib/python3.10/dist-packages (from datasets) (2.0.3)\n",
            "Collecting requests>=2.32.2 (from datasets)\n",
            "  Downloading requests-2.32.3-py3-none-any.whl.metadata (4.6 kB)\n",
            "Requirement already satisfied: tqdm>=4.66.3 in /usr/local/lib/python3.10/dist-packages (from datasets) (4.66.4)\n",
            "Collecting xxhash (from datasets)\n",
            "  Downloading xxhash-3.4.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (12 kB)\n",
            "Collecting multiprocess (from datasets)\n",
            "  Downloading multiprocess-0.70.16-py310-none-any.whl.metadata (7.2 kB)\n",
            "Collecting fsspec<=2024.5.0,>=2023.1.0 (from fsspec[http]<=2024.5.0,>=2023.1.0->datasets)\n",
            "  Downloading fsspec-2024.5.0-py3-none-any.whl.metadata (11 kB)\n",
            "Requirement already satisfied: aiohttp in /usr/local/lib/python3.10/dist-packages (from datasets) (3.9.5)\n",
            "Requirement already satisfied: huggingface-hub>=0.21.2 in /usr/local/lib/python3.10/dist-packages (from datasets) (0.23.5)\n",
            "Requirement already satisfied: packaging in /usr/local/lib/python3.10/dist-packages (from datasets) (24.1)\n",
            "Requirement already satisfied: pyyaml>=5.1 in /usr/local/lib/python3.10/dist-packages (from datasets) (6.0.1)\n",
            "Requirement already satisfied: aiosignal>=1.1.2 in /usr/local/lib/python3.10/dist-packages (from aiohttp->datasets) (1.3.1)\n",
            "Requirement already satisfied: attrs>=17.3.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp->datasets) (23.2.0)\n",
            "Requirement already satisfied: frozenlist>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from aiohttp->datasets) (1.4.1)\n",
            "Requirement already satisfied: multidict<7.0,>=4.5 in /usr/local/lib/python3.10/dist-packages (from aiohttp->datasets) (6.0.5)\n",
            "Requirement already satisfied: yarl<2.0,>=1.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp->datasets) (1.9.4)\n",
            "Requirement already satisfied: async-timeout<5.0,>=4.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp->datasets) (4.0.3)\n",
            "Requirement already satisfied: typing-extensions>=3.7.4.3 in /usr/local/lib/python3.10/dist-packages (from huggingface-hub>=0.21.2->datasets) (4.12.2)\n",
            "Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests>=2.32.2->datasets) (3.3.2)\n",
            "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests>=2.32.2->datasets) (3.7)\n",
            "Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests>=2.32.2->datasets) (2.0.7)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests>=2.32.2->datasets) (2024.7.4)\n",
            "Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.10/dist-packages (from pandas->datasets) (2.8.2)\n",
            "Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas->datasets) (2024.1)\n",
            "Requirement already satisfied: tzdata>=2022.1 in /usr/local/lib/python3.10/dist-packages (from pandas->datasets) (2024.1)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.8.2->pandas->datasets) (1.16.0)\n",
            "Downloading datasets-2.20.0-py3-none-any.whl (547 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m547.8/547.8 kB\u001b[0m \u001b[31m21.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading dill-0.3.8-py3-none-any.whl (116 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m116.3/116.3 kB\u001b[0m \u001b[31m10.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading fsspec-2024.5.0-py3-none-any.whl (316 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m316.1/316.1 kB\u001b[0m \u001b[31m16.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading pyarrow-17.0.0-cp310-cp310-manylinux_2_28_x86_64.whl (39.9 MB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m39.9/39.9 MB\u001b[0m \u001b[31m17.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading requests-2.32.3-py3-none-any.whl (64 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m64.9/64.9 kB\u001b[0m \u001b[31m4.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading multiprocess-0.70.16-py310-none-any.whl (134 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m134.8/134.8 kB\u001b[0m \u001b[31m10.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading xxhash-3.4.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (194 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m194.1/194.1 kB\u001b[0m \u001b[31m15.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hInstalling collected packages: xxhash, requests, pyarrow, fsspec, dill, multiprocess, datasets\n",
            "  Attempting uninstall: requests\n",
            "    Found existing installation: requests 2.31.0\n",
            "    Uninstalling requests-2.31.0:\n",
            "      Successfully uninstalled requests-2.31.0\n",
            "  Attempting uninstall: pyarrow\n",
            "    Found existing installation: pyarrow 14.0.2\n",
            "    Uninstalling pyarrow-14.0.2:\n",
            "      Successfully uninstalled pyarrow-14.0.2\n",
            "  Attempting uninstall: fsspec\n",
            "    Found existing installation: fsspec 2024.6.1\n",
            "    Uninstalling fsspec-2024.6.1:\n",
            "      Successfully uninstalled fsspec-2024.6.1\n",
            "\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n",
            "torch 2.3.1+cu121 requires nvidia-cublas-cu12==12.1.3.1; platform_system == \"Linux\" and platform_machine == \"x86_64\", which is not installed.\n",
            "torch 2.3.1+cu121 requires nvidia-cuda-cupti-cu12==12.1.105; platform_system == \"Linux\" and platform_machine == \"x86_64\", which is not installed.\n",
            "torch 2.3.1+cu121 requires nvidia-cuda-nvrtc-cu12==12.1.105; platform_system == \"Linux\" and platform_machine == \"x86_64\", which is not installed.\n",
            "torch 2.3.1+cu121 requires nvidia-cuda-runtime-cu12==12.1.105; platform_system == \"Linux\" and platform_machine == \"x86_64\", which is not installed.\n",
            "torch 2.3.1+cu121 requires nvidia-cudnn-cu12==8.9.2.26; platform_system == \"Linux\" and platform_machine == \"x86_64\", which is not installed.\n",
            "torch 2.3.1+cu121 requires nvidia-cufft-cu12==11.0.2.54; platform_system == \"Linux\" and platform_machine == \"x86_64\", which is not installed.\n",
            "torch 2.3.1+cu121 requires nvidia-curand-cu12==10.3.2.106; platform_system == \"Linux\" and platform_machine == \"x86_64\", which is not installed.\n",
            "torch 2.3.1+cu121 requires nvidia-cusolver-cu12==11.4.5.107; platform_system == \"Linux\" and platform_machine == \"x86_64\", which is not installed.\n",
            "torch 2.3.1+cu121 requires nvidia-cusparse-cu12==12.1.0.106; platform_system == \"Linux\" and platform_machine == \"x86_64\", which is not installed.\n",
            "torch 2.3.1+cu121 requires nvidia-nccl-cu12==2.20.5; platform_system == \"Linux\" and platform_machine == \"x86_64\", which is not installed.\n",
            "torch 2.3.1+cu121 requires nvidia-nvtx-cu12==12.1.105; platform_system == \"Linux\" and platform_machine == \"x86_64\", which is not installed.\n",
            "cudf-cu12 24.4.1 requires pyarrow<15.0.0a0,>=14.0.1, but you have pyarrow 17.0.0 which is incompatible.\n",
            "gcsfs 2024.6.1 requires fsspec==2024.6.1, but you have fsspec 2024.5.0 which is incompatible.\n",
            "google-colab 1.0.0 requires requests==2.31.0, but you have requests 2.32.3 which is incompatible.\n",
            "ibis-framework 8.0.0 requires pyarrow<16,>=2, but you have pyarrow 17.0.0 which is incompatible.\u001b[0m\u001b[31m\n",
            "\u001b[0mSuccessfully installed datasets-2.20.0 dill-0.3.8 fsspec-2024.5.0 multiprocess-0.70.16 pyarrow-17.0.0 requests-2.32.3 xxhash-3.4.1\n",
            "Collecting evaluate\n",
            "  Downloading evaluate-0.4.2-py3-none-any.whl.metadata (9.3 kB)\n",
            "Requirement already satisfied: datasets>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from evaluate) (2.20.0)\n",
            "Requirement already satisfied: numpy>=1.17 in /usr/local/lib/python3.10/dist-packages (from evaluate) (1.25.2)\n",
            "Requirement already satisfied: dill in /usr/local/lib/python3.10/dist-packages (from evaluate) (0.3.8)\n",
            "Requirement already satisfied: pandas in /usr/local/lib/python3.10/dist-packages (from evaluate) (2.0.3)\n",
            "Requirement already satisfied: requests>=2.19.0 in /usr/local/lib/python3.10/dist-packages (from evaluate) (2.32.3)\n",
            "Requirement already satisfied: tqdm>=4.62.1 in /usr/local/lib/python3.10/dist-packages (from evaluate) (4.66.4)\n",
            "Requirement already satisfied: xxhash in /usr/local/lib/python3.10/dist-packages (from evaluate) (3.4.1)\n",
            "Requirement already satisfied: multiprocess in /usr/local/lib/python3.10/dist-packages (from evaluate) (0.70.16)\n",
            "Requirement already satisfied: fsspec>=2021.05.0 in /usr/local/lib/python3.10/dist-packages (from fsspec[http]>=2021.05.0->evaluate) (2024.5.0)\n",
            "Requirement already satisfied: huggingface-hub>=0.7.0 in /usr/local/lib/python3.10/dist-packages (from evaluate) (0.23.5)\n",
            "Requirement already satisfied: packaging in /usr/local/lib/python3.10/dist-packages (from evaluate) (24.1)\n",
            "Requirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from datasets>=2.0.0->evaluate) (3.15.4)\n",
            "Requirement already satisfied: pyarrow>=15.0.0 in /usr/local/lib/python3.10/dist-packages (from datasets>=2.0.0->evaluate) (17.0.0)\n",
            "Requirement already satisfied: pyarrow-hotfix in /usr/local/lib/python3.10/dist-packages (from datasets>=2.0.0->evaluate) (0.6)\n",
            "Requirement already satisfied: aiohttp in /usr/local/lib/python3.10/dist-packages (from datasets>=2.0.0->evaluate) (3.9.5)\n",
            "Requirement already satisfied: pyyaml>=5.1 in /usr/local/lib/python3.10/dist-packages (from datasets>=2.0.0->evaluate) (6.0.1)\n",
            "Requirement already satisfied: typing-extensions>=3.7.4.3 in /usr/local/lib/python3.10/dist-packages (from huggingface-hub>=0.7.0->evaluate) (4.12.2)\n",
            "Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests>=2.19.0->evaluate) (3.3.2)\n",
            "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests>=2.19.0->evaluate) (3.7)\n",
            "Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests>=2.19.0->evaluate) (2.0.7)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests>=2.19.0->evaluate) (2024.7.4)\n",
            "Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.10/dist-packages (from pandas->evaluate) (2.8.2)\n",
            "Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas->evaluate) (2024.1)\n",
            "Requirement already satisfied: tzdata>=2022.1 in /usr/local/lib/python3.10/dist-packages (from pandas->evaluate) (2024.1)\n",
            "Requirement already satisfied: aiosignal>=1.1.2 in /usr/local/lib/python3.10/dist-packages (from aiohttp->datasets>=2.0.0->evaluate) (1.3.1)\n",
            "Requirement already satisfied: attrs>=17.3.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp->datasets>=2.0.0->evaluate) (23.2.0)\n",
            "Requirement already satisfied: frozenlist>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from aiohttp->datasets>=2.0.0->evaluate) (1.4.1)\n",
            "Requirement already satisfied: multidict<7.0,>=4.5 in /usr/local/lib/python3.10/dist-packages (from aiohttp->datasets>=2.0.0->evaluate) (6.0.5)\n",
            "Requirement already satisfied: yarl<2.0,>=1.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp->datasets>=2.0.0->evaluate) (1.9.4)\n",
            "Requirement already satisfied: async-timeout<5.0,>=4.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp->datasets>=2.0.0->evaluate) (4.0.3)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.8.2->pandas->evaluate) (1.16.0)\n",
            "Downloading evaluate-0.4.2-py3-none-any.whl (84 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m84.1/84.1 kB\u001b[0m \u001b[31m6.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hInstalling collected packages: evaluate\n",
            "Successfully installed evaluate-0.4.2\n",
            "Requirement already satisfied: tqdm in /usr/local/lib/python3.10/dist-packages (4.66.4)\n",
            "Requirement already satisfied: transformers in /usr/local/lib/python3.10/dist-packages (4.42.4)\n",
            "Requirement already satisfied: torch in /usr/local/lib/python3.10/dist-packages (2.3.1+cu121)\n",
            "Requirement already satisfied: torchvision in /usr/local/lib/python3.10/dist-packages (0.18.1+cu121)\n",
            "Requirement already satisfied: scikit-learn in /usr/local/lib/python3.10/dist-packages (1.3.2)\n",
            "Requirement already satisfied: matplotlib in /usr/local/lib/python3.10/dist-packages (3.7.1)\n",
            "Requirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from transformers) (3.15.4)\n",
            "Requirement already satisfied: huggingface-hub<1.0,>=0.23.2 in /usr/local/lib/python3.10/dist-packages (from transformers) (0.23.5)\n",
            "Requirement already satisfied: numpy<2.0,>=1.17 in /usr/local/lib/python3.10/dist-packages (from transformers) (1.25.2)\n",
            "Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from transformers) (24.1)\n",
            "Requirement already satisfied: pyyaml>=5.1 in /usr/local/lib/python3.10/dist-packages (from transformers) (6.0.1)\n",
            "Requirement already satisfied: regex!=2019.12.17 in /usr/local/lib/python3.10/dist-packages (from transformers) (2024.5.15)\n",
            "Requirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from transformers) (2.32.3)\n",
            "Requirement already satisfied: safetensors>=0.4.1 in /usr/local/lib/python3.10/dist-packages (from transformers) (0.4.3)\n",
            "Requirement already satisfied: tokenizers<0.20,>=0.19 in /usr/local/lib/python3.10/dist-packages (from transformers) (0.19.1)\n",
            "Requirement already satisfied: typing-extensions>=4.8.0 in /usr/local/lib/python3.10/dist-packages (from torch) (4.12.2)\n",
            "Requirement already satisfied: sympy in /usr/local/lib/python3.10/dist-packages (from torch) (1.13.1)\n",
            "Requirement already satisfied: networkx in /usr/local/lib/python3.10/dist-packages (from torch) (3.3)\n",
            "Requirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from torch) (3.1.4)\n",
            "Requirement already satisfied: fsspec in /usr/local/lib/python3.10/dist-packages (from torch) (2024.5.0)\n",
            "Collecting nvidia-cuda-nvrtc-cu12==12.1.105 (from torch)\n",
            "  Using cached nvidia_cuda_nvrtc_cu12-12.1.105-py3-none-manylinux1_x86_64.whl.metadata (1.5 kB)\n",
            "Collecting nvidia-cuda-runtime-cu12==12.1.105 (from torch)\n",
            "  Using cached nvidia_cuda_runtime_cu12-12.1.105-py3-none-manylinux1_x86_64.whl.metadata (1.5 kB)\n",
            "Collecting nvidia-cuda-cupti-cu12==12.1.105 (from torch)\n",
            "  Using cached nvidia_cuda_cupti_cu12-12.1.105-py3-none-manylinux1_x86_64.whl.metadata (1.6 kB)\n",
            "Collecting nvidia-cudnn-cu12==8.9.2.26 (from torch)\n",
            "  Using cached nvidia_cudnn_cu12-8.9.2.26-py3-none-manylinux1_x86_64.whl.metadata (1.6 kB)\n",
            "Collecting nvidia-cublas-cu12==12.1.3.1 (from torch)\n",
            "  Using cached nvidia_cublas_cu12-12.1.3.1-py3-none-manylinux1_x86_64.whl.metadata (1.5 kB)\n",
            "Collecting nvidia-cufft-cu12==11.0.2.54 (from torch)\n",
            "  Using cached nvidia_cufft_cu12-11.0.2.54-py3-none-manylinux1_x86_64.whl.metadata (1.5 kB)\n",
            "Collecting nvidia-curand-cu12==10.3.2.106 (from torch)\n",
            "  Using cached nvidia_curand_cu12-10.3.2.106-py3-none-manylinux1_x86_64.whl.metadata (1.5 kB)\n",
            "Collecting nvidia-cusolver-cu12==11.4.5.107 (from torch)\n",
            "  Using cached nvidia_cusolver_cu12-11.4.5.107-py3-none-manylinux1_x86_64.whl.metadata (1.6 kB)\n",
            "Collecting nvidia-cusparse-cu12==12.1.0.106 (from torch)\n",
            "  Using cached nvidia_cusparse_cu12-12.1.0.106-py3-none-manylinux1_x86_64.whl.metadata (1.6 kB)\n",
            "Collecting nvidia-nccl-cu12==2.20.5 (from torch)\n",
            "  Using cached nvidia_nccl_cu12-2.20.5-py3-none-manylinux2014_x86_64.whl.metadata (1.8 kB)\n",
            "Collecting nvidia-nvtx-cu12==12.1.105 (from torch)\n",
            "  Using cached nvidia_nvtx_cu12-12.1.105-py3-none-manylinux1_x86_64.whl.metadata (1.7 kB)\n",
            "Requirement already satisfied: triton==2.3.1 in /usr/local/lib/python3.10/dist-packages (from torch) (2.3.1)\n",
            "Collecting nvidia-nvjitlink-cu12 (from nvidia-cusolver-cu12==11.4.5.107->torch)\n",
            "  Downloading nvidia_nvjitlink_cu12-12.5.82-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\n",
            "Requirement already satisfied: pillow!=8.3.*,>=5.3.0 in /usr/local/lib/python3.10/dist-packages (from torchvision) (9.4.0)\n",
            "Requirement already satisfied: scipy>=1.5.0 in /usr/local/lib/python3.10/dist-packages (from scikit-learn) (1.13.1)\n",
            "Requirement already satisfied: joblib>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from scikit-learn) (1.4.2)\n",
            "Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from scikit-learn) (3.5.0)\n",
            "Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (1.2.1)\n",
            "Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (0.12.1)\n",
            "Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (4.53.1)\n",
            "Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (1.4.5)\n",
            "Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (3.1.2)\n",
            "Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (2.8.2)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.7->matplotlib) (1.16.0)\n",
            "Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2->torch) (2.1.5)\n",
            "Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests->transformers) (3.3.2)\n",
            "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests->transformers) (3.7)\n",
            "Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests->transformers) (2.0.7)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests->transformers) (2024.7.4)\n",
            "Requirement already satisfied: mpmath<1.4,>=1.1.0 in /usr/local/lib/python3.10/dist-packages (from sympy->torch) (1.3.0)\n",
            "Using cached nvidia_cublas_cu12-12.1.3.1-py3-none-manylinux1_x86_64.whl (410.6 MB)\n",
            "Using cached nvidia_cuda_cupti_cu12-12.1.105-py3-none-manylinux1_x86_64.whl (14.1 MB)\n",
            "Using cached nvidia_cuda_nvrtc_cu12-12.1.105-py3-none-manylinux1_x86_64.whl (23.7 MB)\n",
            "Using cached nvidia_cuda_runtime_cu12-12.1.105-py3-none-manylinux1_x86_64.whl (823 kB)\n",
            "Using cached nvidia_cudnn_cu12-8.9.2.26-py3-none-manylinux1_x86_64.whl (731.7 MB)\n",
            "Using cached nvidia_cufft_cu12-11.0.2.54-py3-none-manylinux1_x86_64.whl (121.6 MB)\n",
            "Using cached nvidia_curand_cu12-10.3.2.106-py3-none-manylinux1_x86_64.whl (56.5 MB)\n",
            "Using cached nvidia_cusolver_cu12-11.4.5.107-py3-none-manylinux1_x86_64.whl (124.2 MB)\n",
            "Using cached nvidia_cusparse_cu12-12.1.0.106-py3-none-manylinux1_x86_64.whl (196.0 MB)\n",
            "Using cached nvidia_nccl_cu12-2.20.5-py3-none-manylinux2014_x86_64.whl (176.2 MB)\n",
            "Using cached nvidia_nvtx_cu12-12.1.105-py3-none-manylinux1_x86_64.whl (99 kB)\n",
            "Downloading nvidia_nvjitlink_cu12-12.5.82-py3-none-manylinux2014_x86_64.whl (21.3 MB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m21.3/21.3 MB\u001b[0m \u001b[31m14.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hInstalling collected packages: nvidia-nvtx-cu12, nvidia-nvjitlink-cu12, nvidia-nccl-cu12, nvidia-curand-cu12, nvidia-cufft-cu12, nvidia-cuda-runtime-cu12, nvidia-cuda-nvrtc-cu12, nvidia-cuda-cupti-cu12, nvidia-cublas-cu12, nvidia-cusparse-cu12, nvidia-cudnn-cu12, nvidia-cusolver-cu12\n",
            "Successfully installed nvidia-cublas-cu12-12.1.3.1 nvidia-cuda-cupti-cu12-12.1.105 nvidia-cuda-nvrtc-cu12-12.1.105 nvidia-cuda-runtime-cu12-12.1.105 nvidia-cudnn-cu12-8.9.2.26 nvidia-cufft-cu12-11.0.2.54 nvidia-curand-cu12-10.3.2.106 nvidia-cusolver-cu12-11.4.5.107 nvidia-cusparse-cu12-12.1.0.106 nvidia-nccl-cu12-2.20.5 nvidia-nvjitlink-cu12-12.5.82 nvidia-nvtx-cu12-12.1.105\n"
          ]
        }
      ],
      "source": [
        "!pip install datasets pandas numpy\n",
        "!pip install evaluate\n",
        "!pip install tqdm transformers torch torchvision scikit-learn matplotlib"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "jNeLh3j4N9dq"
      },
      "outputs": [],
      "source": [
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import torch\n",
        "import torchvision\n",
        "import torchvision.transforms as transforms\n",
        "import json\n",
        "import pandas as pd\n",
        "from tqdm import tqdm\n",
        "from datasets import load_dataset\n",
        "from torchvision.transforms import ToTensor\n",
        "from torch.utils.data import Dataset\n",
        "from transformers import ViTForImageClassification, Trainer, TrainingArguments, DefaultDataCollator\n",
        "from torch.utils.data import Subset\n",
        "from sklearn.metrics import accuracy_score, precision_score, f1_score, roc_auc_score, roc_curve\n",
        "from scipy.special import softmax"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "8DL8-YYiQ4V_"
      },
      "outputs": [],
      "source": [
        "class CustomCIFAR10(Dataset):\n",
        "    def __init__(self, cifar10_dataset):\n",
        "        self.cifar10_dataset = cifar10_dataset\n",
        "\n",
        "    def __len__(self):\n",
        "        return len(self.cifar10_dataset)\n",
        "\n",
        "    def __getitem__(self, idx):\n",
        "        image, label = self.cifar10_dataset[idx]\n",
        "        return {\"pixel_values\": image, \"labels\": label}"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "SYRmSN9pRVSM",
        "outputId": "d3664e5f-8927-4441-bb1c-50bf1940de0a"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Files already downloaded and verified\n",
            "Files already downloaded and verified\n"
          ]
        }
      ],
      "source": [
        "# Define transformations with resizing\n",
        "transform = transforms.Compose([\n",
        "    transforms.Resize((224, 224)),\n",
        "    transforms.ToTensor(),\n",
        "    transforms.Normalize((0.5, 0.5, 0.5), (0.5, 0.5, 0.5))\n",
        "])\n",
        "\n",
        "# Load training and test datasets\n",
        "train_dataset = torchvision.datasets.CIFAR10(root='./data', train=True, download=True, transform=transform)\n",
        "eval_dataset = torchvision.datasets.CIFAR10(root='./data', train=False, download=True, transform=transform)\n",
        "\n",
        "# Convert to custom dataset format\n",
        "train_dataset = CustomCIFAR10(train_dataset)\n",
        "eval_dataset = CustomCIFAR10(eval_dataset)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "cPruoFA2ZT8n",
        "outputId": "ebea9224-82a5-454e-a68e-a2af117d83a6"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Number of items in the training subset: 1000\n",
            "Number of items in the evaluation subset: 1000\n"
          ]
        }
      ],
      "source": [
        "subset_indices = list(range(1000))  # Choose samples\n",
        "train_subset = Subset(train_dataset, subset_indices)\n",
        "eval_subset = Subset(eval_dataset, subset_indices)\n",
        "print(f'Number of items in the training subset: {len(train_subset)}')\n",
        "print(f'Number of items in the evaluation subset: {len(eval_subset)}')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 282
        },
        "id": "_gDdo8kWRk6s",
        "outputId": "f28bade6-68d3-447e-b89f-21459425203e"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1500x300 with 5 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "def show_images(dataset, title):\n",
        "    fig, axes = plt.subplots(1, 5, figsize=(15, 3))\n",
        "    fig.suptitle(title)\n",
        "    for i in range(5):\n",
        "        example = dataset[i]\n",
        "        image = example[\"pixel_values\"].permute(1, 2, 0)  # (C, H, W) format\n",
        "        axes[i].imshow(image / 2 + 0.5)  # Unnormalize\n",
        "        axes[i].set_title(f\"Label: {example['labels']}\")\n",
        "        axes[i].axis('off')\n",
        "    plt.show()\n",
        "\n",
        "# Show images from real dataset\n",
        "show_images(train_dataset, \"Real Dataset\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "collapsed": true,
        "id": "Sl-Hmko7beln",
        "outputId": "a4c255fb-8be9-4925-b4b9-19e6938dd41c"
      },
      "outputs": [
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "Some weights of ViTForImageClassification were not initialized from the model checkpoint at google/vit-base-patch16-224 and are newly initialized because the shapes did not match:\n",
            "- classifier.bias: found shape torch.Size([1000]) in the checkpoint and torch.Size([10]) in the model instantiated\n",
            "- classifier.weight: found shape torch.Size([1000, 768]) in the checkpoint and torch.Size([10, 768]) in the model instantiated\n",
            "You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n",
            "/usr/local/lib/python3.10/dist-packages/transformers/training_args.py:1494: FutureWarning: `evaluation_strategy` is deprecated and will be removed in version 4.46 of 🤗 Transformers. Use `eval_strategy` instead\n",
            "  warnings.warn(\n"
          ]
        },
        {
          "data": {
            "text/html": [
              "\n",
              "    <div>\n",
              "      \n",
              "      <progress value='442' max='630' style='width:300px; height:20px; vertical-align: middle;'></progress>\n",
              "      [442/630 06:47 < 02:54, 1.08 it/s, Epoch 7/10]\n",
              "    </div>\n",
              "    <table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              " <tr style=\"text-align: left;\">\n",
              "      <th>Epoch</th>\n",
              "      <th>Training Loss</th>\n",
              "      <th>Validation Loss</th>\n",
              "      <th>Accuracy</th>\n",
              "      <th>Precision</th>\n",
              "      <th>F1</th>\n",
              "      <th>Auc</th>\n",
              "      <th>Roc Curve Data</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <td>1</td>\n",
              "      <td>0.351500</td>\n",
              "      <td>0.295224</td>\n",
              "      <td>0.943000</td>\n",
              "      <td>0.943963</td>\n",
              "      <td>0.942866</td>\n",
              "      <td>0.998073</td>\n",
              "      <td>([0.0, 0.0, 0.0, 0.0011148272017837235, 0.0011148272017837235, 0.002229654403567447, 0.002229654403567447, 0.004459308807134894, 0.004459308807134894, 0.005574136008918618, 0.005574136008918618, 0.006688963210702341, 0.006688963210702341, 0.008918617614269788, 0.008918617614269788, 0.024526198439241916, 0.024526198439241916, 0.03567447045707915, 0.03567447045707915, 1.0], [0.0, 0.009708737864077669, 0.7475728155339806, 0.7475728155339806, 0.883495145631068, 0.883495145631068, 0.912621359223301, 0.912621359223301, 0.941747572815534, 0.941747572815534, 0.9514563106796117, 0.9514563106796117, 0.970873786407767, 0.970873786407767, 0.9805825242718447, 0.9805825242718447, 0.9902912621359223, 0.9902912621359223, 1.0, 1.0])</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>2</td>\n",
              "      <td>0.093200</td>\n",
              "      <td>0.189469</td>\n",
              "      <td>0.946000</td>\n",
              "      <td>0.951106</td>\n",
              "      <td>0.945400</td>\n",
              "      <td>0.998177</td>\n",
              "      <td>([0.0, 0.0, 0.0, 0.002229654403567447, 0.002229654403567447, 0.0033444816053511705, 0.0033444816053511705, 0.004459308807134894, 0.004459308807134894, 1.0], [0.0, 0.009708737864077669, 0.941747572815534, 0.941747572815534, 0.9514563106796117, 0.9514563106796117, 0.9902912621359223, 0.9902912621359223, 1.0, 1.0])</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>3</td>\n",
              "      <td>0.004400</td>\n",
              "      <td>0.110282</td>\n",
              "      <td>0.971000</td>\n",
              "      <td>0.971310</td>\n",
              "      <td>0.971048</td>\n",
              "      <td>0.998959</td>\n",
              "      <td>([0.0, 0.0, 0.0, 0.0011148272017837235, 0.0011148272017837235, 0.002229654403567447, 0.002229654403567447, 0.004459308807134894, 0.004459308807134894, 1.0], [0.0, 0.009708737864077669, 0.941747572815534, 0.941747572815534, 0.9611650485436893, 0.9611650485436893, 0.9805825242718447, 0.9805825242718447, 1.0, 1.0])</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>4</td>\n",
              "      <td>0.002200</td>\n",
              "      <td>0.122257</td>\n",
              "      <td>0.968000</td>\n",
              "      <td>0.968573</td>\n",
              "      <td>0.968093</td>\n",
              "      <td>0.998840</td>\n",
              "      <td>([0.0, 0.0, 0.0, 0.002229654403567447, 0.002229654403567447, 0.0033444816053511705, 0.0033444816053511705, 0.004459308807134894, 0.004459308807134894, 1.0], [0.0, 0.009708737864077669, 0.9320388349514563, 0.9320388349514563, 0.941747572815534, 0.941747572815534, 0.9611650485436893, 0.9611650485436893, 1.0, 1.0])</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>5</td>\n",
              "      <td>0.001600</td>\n",
              "      <td>0.125950</td>\n",
              "      <td>0.967000</td>\n",
              "      <td>0.967508</td>\n",
              "      <td>0.967074</td>\n",
              "      <td>0.998799</td>\n",
              "      <td>([0.0, 0.0, 0.0, 0.0033444816053511705, 0.0033444816053511705, 0.004459308807134894, 0.004459308807134894, 0.006688963210702341, 0.006688963210702341, 1.0], [0.0, 0.009708737864077669, 0.9320388349514563, 0.9320388349514563, 0.9611650485436893, 0.9611650485436893, 0.9805825242718447, 0.9805825242718447, 1.0, 1.0])</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>6</td>\n",
              "      <td>0.001200</td>\n",
              "      <td>0.129011</td>\n",
              "      <td>0.965000</td>\n",
              "      <td>0.965360</td>\n",
              "      <td>0.965051</td>\n",
              "      <td>0.998770</td>\n",
              "      <td>([0.0, 0.0, 0.0, 0.002229654403567447, 0.002229654403567447, 0.0033444816053511705, 0.0033444816053511705, 0.004459308807134894, 0.004459308807134894, 0.005574136008918618, 0.005574136008918618, 0.006688963210702341, 0.006688963210702341, 1.0], [0.0, 0.009708737864077669, 0.912621359223301, 0.912621359223301, 0.9223300970873787, 0.9223300970873787, 0.9514563106796117, 0.9514563106796117, 0.970873786407767, 0.970873786407767, 0.9805825242718447, 0.9805825242718447, 1.0, 1.0])</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table><p>\n",
              "    <div>\n",
              "      \n",
              "      <progress value='55' max='63' style='width:300px; height:20px; vertical-align: middle;'></progress>\n",
              "      [55/63 00:11 < 00:01, 4.83 it/s]\n",
              "    </div>\n",
              "    "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "Trainer is attempting to log a value of \"([0.0, 0.0, 0.0, 0.0011148272017837235, 0.0011148272017837235, 0.002229654403567447, 0.002229654403567447, 0.004459308807134894, 0.004459308807134894, 0.005574136008918618, 0.005574136008918618, 0.006688963210702341, 0.006688963210702341, 0.008918617614269788, 0.008918617614269788, 0.024526198439241916, 0.024526198439241916, 0.03567447045707915, 0.03567447045707915, 1.0], [0.0, 0.009708737864077669, 0.7475728155339806, 0.7475728155339806, 0.883495145631068, 0.883495145631068, 0.912621359223301, 0.912621359223301, 0.941747572815534, 0.941747572815534, 0.9514563106796117, 0.9514563106796117, 0.970873786407767, 0.970873786407767, 0.9805825242718447, 0.9805825242718447, 0.9902912621359223, 0.9902912621359223, 1.0, 1.0])\" of type <class 'tuple'> for key \"eval/roc_curve_data\" as a scalar. This invocation of Tensorboard's writer.add_scalar() is incorrect so we dropped this attribute.\n",
            "Trainer is attempting to log a value of \"([0.0, 0.0, 0.0, 0.002229654403567447, 0.002229654403567447, 0.0033444816053511705, 0.0033444816053511705, 0.004459308807134894, 0.004459308807134894, 1.0], [0.0, 0.009708737864077669, 0.941747572815534, 0.941747572815534, 0.9514563106796117, 0.9514563106796117, 0.9902912621359223, 0.9902912621359223, 1.0, 1.0])\" of type <class 'tuple'> for key \"eval/roc_curve_data\" as a scalar. This invocation of Tensorboard's writer.add_scalar() is incorrect so we dropped this attribute.\n",
            "Trainer is attempting to log a value of \"([0.0, 0.0, 0.0, 0.0011148272017837235, 0.0011148272017837235, 0.002229654403567447, 0.002229654403567447, 0.004459308807134894, 0.004459308807134894, 1.0], [0.0, 0.009708737864077669, 0.941747572815534, 0.941747572815534, 0.9611650485436893, 0.9611650485436893, 0.9805825242718447, 0.9805825242718447, 1.0, 1.0])\" of type <class 'tuple'> for key \"eval/roc_curve_data\" as a scalar. This invocation of Tensorboard's writer.add_scalar() is incorrect so we dropped this attribute.\n",
            "Trainer is attempting to log a value of \"([0.0, 0.0, 0.0, 0.002229654403567447, 0.002229654403567447, 0.0033444816053511705, 0.0033444816053511705, 0.004459308807134894, 0.004459308807134894, 1.0], [0.0, 0.009708737864077669, 0.9320388349514563, 0.9320388349514563, 0.941747572815534, 0.941747572815534, 0.9611650485436893, 0.9611650485436893, 1.0, 1.0])\" of type <class 'tuple'> for key \"eval/roc_curve_data\" as a scalar. This invocation of Tensorboard's writer.add_scalar() is incorrect so we dropped this attribute.\n",
            "Trainer is attempting to log a value of \"([0.0, 0.0, 0.0, 0.0033444816053511705, 0.0033444816053511705, 0.004459308807134894, 0.004459308807134894, 0.006688963210702341, 0.006688963210702341, 1.0], [0.0, 0.009708737864077669, 0.9320388349514563, 0.9320388349514563, 0.9611650485436893, 0.9611650485436893, 0.9805825242718447, 0.9805825242718447, 1.0, 1.0])\" of type <class 'tuple'> for key \"eval/roc_curve_data\" as a scalar. This invocation of Tensorboard's writer.add_scalar() is incorrect so we dropped this attribute.\n",
            "Trainer is attempting to log a value of \"([0.0, 0.0, 0.0, 0.002229654403567447, 0.002229654403567447, 0.0033444816053511705, 0.0033444816053511705, 0.004459308807134894, 0.004459308807134894, 0.005574136008918618, 0.005574136008918618, 0.006688963210702341, 0.006688963210702341, 1.0], [0.0, 0.009708737864077669, 0.912621359223301, 0.912621359223301, 0.9223300970873787, 0.9223300970873787, 0.9514563106796117, 0.9514563106796117, 0.970873786407767, 0.970873786407767, 0.9805825242718447, 0.9805825242718447, 1.0, 1.0])\" of type <class 'tuple'> for key \"eval/roc_curve_data\" as a scalar. This invocation of Tensorboard's writer.add_scalar() is incorrect so we dropped this attribute.\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "    <div>\n",
              "      \n",
              "      <progress value='630' max='630' style='width:300px; height:20px; vertical-align: middle;'></progress>\n",
              "      [630/630 10:36, Epoch 10/10]\n",
              "    </div>\n",
              "    <table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              " <tr style=\"text-align: left;\">\n",
              "      <th>Epoch</th>\n",
              "      <th>Training Loss</th>\n",
              "      <th>Validation Loss</th>\n",
              "      <th>Accuracy</th>\n",
              "      <th>Precision</th>\n",
              "      <th>F1</th>\n",
              "      <th>Auc</th>\n",
              "      <th>Roc Curve Data</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <td>1</td>\n",
              "      <td>0.351500</td>\n",
              "      <td>0.295224</td>\n",
              "      <td>0.943000</td>\n",
              "      <td>0.943963</td>\n",
              "      <td>0.942866</td>\n",
              "      <td>0.998073</td>\n",
              "      <td>([0.0, 0.0, 0.0, 0.0011148272017837235, 0.0011148272017837235, 0.002229654403567447, 0.002229654403567447, 0.004459308807134894, 0.004459308807134894, 0.005574136008918618, 0.005574136008918618, 0.006688963210702341, 0.006688963210702341, 0.008918617614269788, 0.008918617614269788, 0.024526198439241916, 0.024526198439241916, 0.03567447045707915, 0.03567447045707915, 1.0], [0.0, 0.009708737864077669, 0.7475728155339806, 0.7475728155339806, 0.883495145631068, 0.883495145631068, 0.912621359223301, 0.912621359223301, 0.941747572815534, 0.941747572815534, 0.9514563106796117, 0.9514563106796117, 0.970873786407767, 0.970873786407767, 0.9805825242718447, 0.9805825242718447, 0.9902912621359223, 0.9902912621359223, 1.0, 1.0])</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>2</td>\n",
              "      <td>0.093200</td>\n",
              "      <td>0.189469</td>\n",
              "      <td>0.946000</td>\n",
              "      <td>0.951106</td>\n",
              "      <td>0.945400</td>\n",
              "      <td>0.998177</td>\n",
              "      <td>([0.0, 0.0, 0.0, 0.002229654403567447, 0.002229654403567447, 0.0033444816053511705, 0.0033444816053511705, 0.004459308807134894, 0.004459308807134894, 1.0], [0.0, 0.009708737864077669, 0.941747572815534, 0.941747572815534, 0.9514563106796117, 0.9514563106796117, 0.9902912621359223, 0.9902912621359223, 1.0, 1.0])</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>3</td>\n",
              "      <td>0.004400</td>\n",
              "      <td>0.110282</td>\n",
              "      <td>0.971000</td>\n",
              "      <td>0.971310</td>\n",
              "      <td>0.971048</td>\n",
              "      <td>0.998959</td>\n",
              "      <td>([0.0, 0.0, 0.0, 0.0011148272017837235, 0.0011148272017837235, 0.002229654403567447, 0.002229654403567447, 0.004459308807134894, 0.004459308807134894, 1.0], [0.0, 0.009708737864077669, 0.941747572815534, 0.941747572815534, 0.9611650485436893, 0.9611650485436893, 0.9805825242718447, 0.9805825242718447, 1.0, 1.0])</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>4</td>\n",
              "      <td>0.002200</td>\n",
              "      <td>0.122257</td>\n",
              "      <td>0.968000</td>\n",
              "      <td>0.968573</td>\n",
              "      <td>0.968093</td>\n",
              "      <td>0.998840</td>\n",
              "      <td>([0.0, 0.0, 0.0, 0.002229654403567447, 0.002229654403567447, 0.0033444816053511705, 0.0033444816053511705, 0.004459308807134894, 0.004459308807134894, 1.0], [0.0, 0.009708737864077669, 0.9320388349514563, 0.9320388349514563, 0.941747572815534, 0.941747572815534, 0.9611650485436893, 0.9611650485436893, 1.0, 1.0])</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>5</td>\n",
              "      <td>0.001600</td>\n",
              "      <td>0.125950</td>\n",
              "      <td>0.967000</td>\n",
              "      <td>0.967508</td>\n",
              "      <td>0.967074</td>\n",
              "      <td>0.998799</td>\n",
              "      <td>([0.0, 0.0, 0.0, 0.0033444816053511705, 0.0033444816053511705, 0.004459308807134894, 0.004459308807134894, 0.006688963210702341, 0.006688963210702341, 1.0], [0.0, 0.009708737864077669, 0.9320388349514563, 0.9320388349514563, 0.9611650485436893, 0.9611650485436893, 0.9805825242718447, 0.9805825242718447, 1.0, 1.0])</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>6</td>\n",
              "      <td>0.001200</td>\n",
              "      <td>0.129011</td>\n",
              "      <td>0.965000</td>\n",
              "      <td>0.965360</td>\n",
              "      <td>0.965051</td>\n",
              "      <td>0.998770</td>\n",
              "      <td>([0.0, 0.0, 0.0, 0.002229654403567447, 0.002229654403567447, 0.0033444816053511705, 0.0033444816053511705, 0.004459308807134894, 0.004459308807134894, 0.005574136008918618, 0.005574136008918618, 0.006688963210702341, 0.006688963210702341, 1.0], [0.0, 0.009708737864077669, 0.912621359223301, 0.912621359223301, 0.9223300970873787, 0.9223300970873787, 0.9514563106796117, 0.9514563106796117, 0.970873786407767, 0.970873786407767, 0.9805825242718447, 0.9805825242718447, 1.0, 1.0])</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>7</td>\n",
              "      <td>0.001300</td>\n",
              "      <td>0.131327</td>\n",
              "      <td>0.964000</td>\n",
              "      <td>0.964255</td>\n",
              "      <td>0.964038</td>\n",
              "      <td>0.998752</td>\n",
              "      <td>([0.0, 0.0, 0.0, 0.0011148272017837235, 0.0011148272017837235, 0.002229654403567447, 0.002229654403567447, 0.0033444816053511705, 0.0033444816053511705, 0.004459308807134894, 0.004459308807134894, 0.005574136008918618, 0.005574136008918618, 0.006688963210702341, 0.006688963210702341, 0.007803790412486065, 0.007803790412486065, 1.0], [0.0, 0.009708737864077669, 0.9029126213592233, 0.9029126213592233, 0.912621359223301, 0.912621359223301, 0.9223300970873787, 0.9223300970873787, 0.9514563106796117, 0.9514563106796117, 0.970873786407767, 0.970873786407767, 0.9805825242718447, 0.9805825242718447, 0.9902912621359223, 0.9902912621359223, 1.0, 1.0])</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>8</td>\n",
              "      <td>0.001000</td>\n",
              "      <td>0.132784</td>\n",
              "      <td>0.963000</td>\n",
              "      <td>0.963275</td>\n",
              "      <td>0.963031</td>\n",
              "      <td>0.998750</td>\n",
              "      <td>([0.0, 0.0, 0.0, 0.0011148272017837235, 0.0011148272017837235, 0.002229654403567447, 0.002229654403567447, 0.0033444816053511705, 0.0033444816053511705, 0.004459308807134894, 0.004459308807134894, 0.006688963210702341, 0.006688963210702341, 0.007803790412486065, 0.007803790412486065, 1.0], [0.0, 0.009708737864077669, 0.9029126213592233, 0.9029126213592233, 0.912621359223301, 0.912621359223301, 0.9223300970873787, 0.9223300970873787, 0.9514563106796117, 0.9514563106796117, 0.970873786407767, 0.970873786407767, 0.9902912621359223, 0.9902912621359223, 1.0, 1.0])</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>9</td>\n",
              "      <td>0.000900</td>\n",
              "      <td>0.133357</td>\n",
              "      <td>0.963000</td>\n",
              "      <td>0.963275</td>\n",
              "      <td>0.963031</td>\n",
              "      <td>0.998751</td>\n",
              "      <td>([0.0, 0.0, 0.0, 0.0011148272017837235, 0.0011148272017837235, 0.002229654403567447, 0.002229654403567447, 0.0033444816053511705, 0.0033444816053511705, 0.004459308807134894, 0.004459308807134894, 0.006688963210702341, 0.006688963210702341, 0.007803790412486065, 0.007803790412486065, 1.0], [0.0, 0.009708737864077669, 0.9029126213592233, 0.9029126213592233, 0.912621359223301, 0.912621359223301, 0.9320388349514563, 0.9320388349514563, 0.9514563106796117, 0.9514563106796117, 0.970873786407767, 0.970873786407767, 0.9805825242718447, 0.9805825242718447, 1.0, 1.0])</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>10</td>\n",
              "      <td>0.000800</td>\n",
              "      <td>0.133671</td>\n",
              "      <td>0.963000</td>\n",
              "      <td>0.963275</td>\n",
              "      <td>0.963031</td>\n",
              "      <td>0.998744</td>\n",
              "      <td>([0.0, 0.0, 0.0, 0.0, 0.0, 0.0011148272017837235, 0.0011148272017837235, 0.002229654403567447, 0.002229654403567447, 0.0033444816053511705, 0.0033444816053511705, 0.004459308807134894, 0.004459308807134894, 0.006688963210702341, 0.006688963210702341, 0.007803790412486065, 0.007803790412486065, 1.0], [0.0, 0.009708737864077669, 0.1553398058252427, 0.17475728155339806, 0.9029126213592233, 0.9029126213592233, 0.912621359223301, 0.912621359223301, 0.9320388349514563, 0.9320388349514563, 0.9514563106796117, 0.9514563106796117, 0.970873786407767, 0.970873786407767, 0.9805825242718447, 0.9805825242718447, 1.0, 1.0])</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table><p>"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Trainer is attempting to log a value of \"([0.0, 0.0, 0.0, 0.0011148272017837235, 0.0011148272017837235, 0.002229654403567447, 0.002229654403567447, 0.0033444816053511705, 0.0033444816053511705, 0.004459308807134894, 0.004459308807134894, 0.005574136008918618, 0.005574136008918618, 0.006688963210702341, 0.006688963210702341, 0.007803790412486065, 0.007803790412486065, 1.0], [0.0, 0.009708737864077669, 0.9029126213592233, 0.9029126213592233, 0.912621359223301, 0.912621359223301, 0.9223300970873787, 0.9223300970873787, 0.9514563106796117, 0.9514563106796117, 0.970873786407767, 0.970873786407767, 0.9805825242718447, 0.9805825242718447, 0.9902912621359223, 0.9902912621359223, 1.0, 1.0])\" of type <class 'tuple'> for key \"eval/roc_curve_data\" as a scalar. This invocation of Tensorboard's writer.add_scalar() is incorrect so we dropped this attribute.\n",
            "Trainer is attempting to log a value of \"([0.0, 0.0, 0.0, 0.0011148272017837235, 0.0011148272017837235, 0.002229654403567447, 0.002229654403567447, 0.0033444816053511705, 0.0033444816053511705, 0.004459308807134894, 0.004459308807134894, 0.006688963210702341, 0.006688963210702341, 0.007803790412486065, 0.007803790412486065, 1.0], [0.0, 0.009708737864077669, 0.9029126213592233, 0.9029126213592233, 0.912621359223301, 0.912621359223301, 0.9223300970873787, 0.9223300970873787, 0.9514563106796117, 0.9514563106796117, 0.970873786407767, 0.970873786407767, 0.9902912621359223, 0.9902912621359223, 1.0, 1.0])\" of type <class 'tuple'> for key \"eval/roc_curve_data\" as a scalar. This invocation of Tensorboard's writer.add_scalar() is incorrect so we dropped this attribute.\n",
            "Trainer is attempting to log a value of \"([0.0, 0.0, 0.0, 0.0011148272017837235, 0.0011148272017837235, 0.002229654403567447, 0.002229654403567447, 0.0033444816053511705, 0.0033444816053511705, 0.004459308807134894, 0.004459308807134894, 0.006688963210702341, 0.006688963210702341, 0.007803790412486065, 0.007803790412486065, 1.0], [0.0, 0.009708737864077669, 0.9029126213592233, 0.9029126213592233, 0.912621359223301, 0.912621359223301, 0.9320388349514563, 0.9320388349514563, 0.9514563106796117, 0.9514563106796117, 0.970873786407767, 0.970873786407767, 0.9805825242718447, 0.9805825242718447, 1.0, 1.0])\" of type <class 'tuple'> for key \"eval/roc_curve_data\" as a scalar. This invocation of Tensorboard's writer.add_scalar() is incorrect so we dropped this attribute.\n",
            "Trainer is attempting to log a value of \"([0.0, 0.0, 0.0, 0.0, 0.0, 0.0011148272017837235, 0.0011148272017837235, 0.002229654403567447, 0.002229654403567447, 0.0033444816053511705, 0.0033444816053511705, 0.004459308807134894, 0.004459308807134894, 0.006688963210702341, 0.006688963210702341, 0.007803790412486065, 0.007803790412486065, 1.0], [0.0, 0.009708737864077669, 0.1553398058252427, 0.17475728155339806, 0.9029126213592233, 0.9029126213592233, 0.912621359223301, 0.912621359223301, 0.9320388349514563, 0.9320388349514563, 0.9514563106796117, 0.9514563106796117, 0.970873786407767, 0.970873786407767, 0.9805825242718447, 0.9805825242718447, 1.0, 1.0])\" of type <class 'tuple'> for key \"eval/roc_curve_data\" as a scalar. This invocation of Tensorboard's writer.add_scalar() is incorrect so we dropped this attribute.\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "    <div>\n",
              "      \n",
              "      <progress value='63' max='63' style='width:300px; height:20px; vertical-align: middle;'></progress>\n",
              "      [63/63 00:12]\n",
              "    </div>\n",
              "    "
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Trainer is attempting to log a value of \"([0.0, 0.0, 0.0, 0.0011148272017837235, 0.0011148272017837235, 0.002229654403567447, 0.002229654403567447, 0.004459308807134894, 0.004459308807134894, 1.0], [0.0, 0.009708737864077669, 0.941747572815534, 0.941747572815534, 0.9611650485436893, 0.9611650485436893, 0.9805825242718447, 0.9805825242718447, 1.0, 1.0])\" of type <class 'tuple'> for key \"eval/roc_curve_data\" as a scalar. This invocation of Tensorboard's writer.add_scalar() is incorrect so we dropped this attribute.\n"
          ]
        }
      ],
      "source": [
        "# Define constants\n",
        "NUM_CLASSES = 10  # CIFAR-10 has 10 classes\n",
        "MODEL_NAME = 'google/vit-base-patch16-224'\n",
        "OUTPUT_DIR = './results'\n",
        "LOG_DIR = './logs'\n",
        "BATCH_SIZE = 16\n",
        "NUM_EPOCHS = 10\n",
        "WEIGHT_DECAY = 0.01\n",
        "LOGGING_STEPS = 10\n",
        "\n",
        "# Load the model\n",
        "model = ViTForImageClassification.from_pretrained(\n",
        "    MODEL_NAME,\n",
        "    num_labels=NUM_CLASSES,\n",
        "    ignore_mismatched_sizes=True\n",
        ")\n",
        "\n",
        "# Define training arguments\n",
        "training_args = TrainingArguments(\n",
        "    output_dir=OUTPUT_DIR,\n",
        "    evaluation_strategy='epoch',\n",
        "    save_strategy='epoch',\n",
        "    per_device_train_batch_size=BATCH_SIZE,\n",
        "    per_device_eval_batch_size=BATCH_SIZE,\n",
        "    num_train_epochs=NUM_EPOCHS,\n",
        "    weight_decay=WEIGHT_DECAY,\n",
        "    logging_dir=LOG_DIR,\n",
        "    logging_steps=LOGGING_STEPS,\n",
        "    load_best_model_at_end=True,\n",
        "    metric_for_best_model='f1',\n",
        "    greater_is_better=True,\n",
        ")\n",
        "\n",
        "# Define data collator\n",
        "data_collator = DefaultDataCollator(return_tensors=\"pt\")\n",
        "\n",
        "def compute_metrics(eval_pred):\n",
        "    logits, labels = eval_pred\n",
        "    probabilities = softmax(logits, axis=-1)\n",
        "    predictions = np.argmax(probabilities, axis=-1)\n",
        "\n",
        "    accuracy = accuracy_score(labels, predictions)\n",
        "    precision = precision_score(labels, predictions, average='weighted', zero_division=0)\n",
        "    f1 = f1_score(labels, predictions, average='weighted')\n",
        "\n",
        "    # One-hot encode labels for AUC computation\n",
        "    labels_one_hot = np.eye(probabilities.shape[1])[labels]\n",
        "\n",
        "    # Compute AUC for multi-class\n",
        "    try:\n",
        "        auc = roc_auc_score(labels_one_hot, probabilities, multi_class='ovr', average='weighted')\n",
        "    except ValueError as e:\n",
        "        print(f\"Error computing AUC: {e}\")\n",
        "        auc = None\n",
        "\n",
        "    # Compute ROC curve\n",
        "    fpr, tpr, _ = roc_curve(labels_one_hot[:, 0], probabilities[:, 0])\n",
        "\n",
        "    return {\n",
        "        'accuracy': accuracy,\n",
        "        'precision': precision,\n",
        "        'f1': f1,\n",
        "        'auc': auc,\n",
        "        'roc_curve_data': (fpr.tolist(), tpr.tolist())\n",
        "    }\n",
        "\n",
        "# Initialize the Trainer\n",
        "trainer = Trainer(\n",
        "    model=model,\n",
        "    args=training_args,\n",
        "    train_dataset=train_subset,\n",
        "    eval_dataset=eval_subset,\n",
        "    data_collator=data_collator,\n",
        "    compute_metrics=compute_metrics\n",
        ")\n",
        "\n",
        "# Train and evaluate the model\n",
        "trainer.train()\n",
        "metrics = trainer.evaluate()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "dbsjN5fthvI0"
      },
      "outputs": [],
      "source": [
        "# Save metrics to a JSON file\n",
        "def save_metrics(metrics, filename):\n",
        "    with open(filename, 'w') as f:\n",
        "        json.dump(metrics, f, indent=4)\n",
        "\n",
        "save_metrics(metrics, 'metrics_original.json')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 541
        },
        "id": "muRDEU0njIEt",
        "outputId": "10babf85-8ddf-410e-b653-07f8a0c58180"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Accuracy: 0.9710\n",
            "Precision: 0.9713\n",
            "F1 Score: 0.9710\n",
            "AUC: 0.9990\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "# Print the metrics in a clean format\n",
        "print(f\"Accuracy: {metrics['eval_accuracy']:.4f}\")\n",
        "print(f\"Precision: {metrics['eval_precision']:.4f}\")\n",
        "print(f\"F1 Score: {metrics['eval_f1']:.4f}\")\n",
        "print(f\"AUC: {metrics['eval_auc']:.4f}\")\n",
        "\n",
        "# Plot the ROC curve and save it to a file\n",
        "fpr, tpr = metrics['eval_roc_curve_data']\n",
        "plt.figure()\n",
        "plt.plot(fpr, tpr, color='blue', lw=2, label=f'ROC curve (AUC = {metrics[\"eval_auc\"]:.4f})')\n",
        "plt.plot([0, 1], [0, 1], color='gray', lw=2, linestyle='--')\n",
        "plt.xlabel('False Positive Rate')\n",
        "plt.ylabel('True Positive Rate')\n",
        "plt.title('Receiver Operating Characteristic (ROC) Curve')\n",
        "plt.legend(loc=\"lower right\")\n",
        "plt.savefig('./results/roc_curve.png')  # Save the plot to a file\n",
        "plt.show()  # Display the plot"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "***Synthetic image Generation***"
      ],
      "metadata": {
        "id": "5lAgYv_v2FX_"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "gxtArgAOh2U7",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 413
        },
        "outputId": "3c0eaa97-0959-4178-b206-af03b6a5dd3b"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Files already downloaded and verified\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.\n",
            "  self.pid = os.fork()\n",
            "/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.\n",
            "  self.pid = os.fork()\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch [1/2] Loss D: 0.4620, loss G: 2.8103\n",
            "Epoch [2/2] Loss D: 0.5051, loss G: 3.5970\n",
            "Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n",
            "The file 'synthetic_cifar10_images.npy' has been saved to Google Drive at /content/drive/My Drive/synthetic_cifar10_images.npy.\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1500x300 with 5 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "import torch\n",
        "import torch.nn as nn\n",
        "import torch.optim as optim\n",
        "import torchvision\n",
        "import torchvision.transforms as transforms\n",
        "from torch.utils.data import DataLoader\n",
        "import matplotlib.pyplot as plt\n",
        "import numpy as np\n",
        "\n",
        "# Define transformations\n",
        "transform = transforms.Compose([\n",
        "    transforms.Resize((32, )),\n",
        "    transforms.ToTensor(),\n",
        "    transforms.Normalize((0.5, 0.5, 0.5), (0.5, 0.5, 0.5))\n",
        "])\n",
        "\n",
        "# Load CIFAR-10 dataset\n",
        "train_dataset = torchvision.datasets.CIFAR10(root='./data', train=True, download=True, transform=transform)\n",
        "train_loader = DataLoader(train_dataset, batch_size=128, shuffle=True, num_workers=2)\n",
        "\n",
        "# Define the Generator\n",
        "class Generator(nn.Module):\n",
        "    def __init__(self):\n",
        "        super(Generator, self).__init__()\n",
        "        self.main = nn.Sequential(\n",
        "            nn.ConvTranspose2d(100, 512, 4, 1, 0, bias=False),\n",
        "            nn.BatchNorm2d(512),\n",
        "            nn.ReLU(True),\n",
        "            nn.ConvTranspose2d(512, 256, 4, 2, 1, bias=False),\n",
        "            nn.BatchNorm2d(256),\n",
        "            nn.ReLU(True),\n",
        "            nn.ConvTranspose2d(256, 128, 4, 2, 1, bias=False),\n",
        "            nn.BatchNorm2d(128),\n",
        "            nn.ReLU(True),\n",
        "            nn.ConvTranspose2d(128, 3, 4, 2, 1, bias=False),\n",
        "            nn.Tanh()\n",
        "        )\n",
        "\n",
        "    def forward(self, input):\n",
        "        return self.main(input)\n",
        "class Discriminator(nn.Module):\n",
        "    def __init__(self):\n",
        "        super(Discriminator, self).__init__()\n",
        "        self.main = nn.Sequential(\n",
        "            nn.Conv2d(3, 128, 4, 2, 1, bias=False),\n",
        "            nn.LeakyReLU(0.2, inplace=True),\n",
        "            nn.Conv2d(128, 256, 4, 2, 1, bias=False),\n",
        "            nn.BatchNorm2d(256),\n",
        "            nn.LeakyReLU(0.2, inplace=True),\n",
        "            nn.Conv2d(256, 512, 4, 2, 1, bias=False),\n",
        "            nn.BatchNorm2d(512),\n",
        "            nn.LeakyReLU(0.2, inplace=True),\n",
        "            nn.Conv2d(512, 1, 4, 1, 0, bias=False),\n",
        "            nn.Sigmoid()\n",
        "        )\n",
        "\n",
        "    def forward(self, input):\n",
        "        return self.main(input).view(-1)\n",
        "\n",
        "# Initialize models\n",
        "netG = Generator().cuda()\n",
        "netD = Discriminator().cuda()\n",
        "\n",
        "# Loss function and optimizers\n",
        "criterion = nn.BCELoss()\n",
        "optimizerD = optim.Adam(netD.parameters(), lr=0.0002, betas=(0.5, 0.999))\n",
        "optimizerG = optim.Adam(netG.parameters(), lr=0.0002, betas=(0.5, 0.999))\n",
        "\n",
        "# Training the GAN\n",
        "num_epochs = 10\n",
        "for epoch in range(num_epochs):\n",
        "    for i, data in enumerate(train_loader, 0):\n",
        "        # Update Discriminator\n",
        "        netD.zero_grad()\n",
        "        real_images, _ = data\n",
        "        real_images = real_images.cuda()\n",
        "        batch_size = real_images.size(0)\n",
        "\n",
        "        # Real images\n",
        "        labels_real = torch.full((batch_size,), 1, dtype=torch.float, device='cuda')\n",
        "        output_real = netD(real_images)\n",
        "        lossD_real = criterion(output_real, labels_real)\n",
        "        lossD_real.backward()\n",
        "\n",
        "        # Fake images\n",
        "        noise = torch.randn(batch_size, 100, 1, 1, device='cuda')\n",
        "        fake_images = netG(noise)\n",
        "        labels_fake = torch.full((batch_size,), 0, dtype=torch.float, device='cuda')\n",
        "        output_fake = netD(fake_images.detach())\n",
        "        lossD_fake = criterion(output_fake, labels_fake)\n",
        "        lossD_fake.backward()\n",
        "\n",
        "        lossD = lossD_real + lossD_fake\n",
        "        optimizerD.step()\n",
        "\n",
        "        # Update Generator\n",
        "        netG.zero_grad()\n",
        "        labels_gen = torch.full((batch_size,), 1, dtype=torch.float, device='cuda')\n",
        "        output_gen = netD(fake_images)\n",
        "        lossG = criterion(output_gen, labels_gen)\n",
        "        lossG.backward()\n",
        "        optimizerG.step()\n",
        "\n",
        "    print(f'Epoch [{epoch+1}/{num_epochs}] Loss D: {lossD:.4f}, loss G: {lossG:.4f}')\n",
        "\n",
        "# Generate synthetic images\n",
        "noise = torch.randn(100, 100, 1, 1, device='cuda')\n",
        "synthetic_images = netG(noise).detach().cpu()\n",
        "\n",
        "# Convert synthetic images to numpy arrays\n",
        "synthetic_images_np = synthetic_images.numpy()\n",
        "\n",
        "# Save synthetic images to Google Drive\n",
        "from google.colab import drive\n",
        "drive.mount('/content/drive')\n",
        "save_path = '/content/drive/My Drive/synthetic_cifar10_images.npy'\n",
        "np.save(save_path, synthetic_images_np)\n",
        "print(f\"The file 'synthetic_cifar10_images.npy' has been saved to Google Drive at {save_path}.\")\n",
        "\n",
        "# Display some synthetic images\n",
        "fig, axes = plt.subplots(1, 5, figsize=(15, 3))\n",
        "for i in range(5):\n",
        "    image = synthetic_images_np[i].transpose(1, 2, 0)\n",
        "    axes[i].imshow((image + 1) / 2)  # Unnormalize\n",
        "    axes[i].axis('off')\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Load the dataset\n",
        "file_path = '/content/drive/My Drive/synthetic_cifar10_images.npy'\n",
        "data = np.load(file_path)\n",
        "\n",
        "# Check the shape of the dataset\n",
        "print(\"Dataset shape:\", data.shape)\n"
      ],
      "metadata": {
        "id": "aKH2S6xYD4Cv"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import cv2\n",
        "\n",
        "# Load the dataset\n",
        "file_path = '/content/drive/My Drive/synthetic_cifar10_images.npy'\n",
        "data = np.load(file_path)\n",
        "\n",
        "# Initialize an empty array to store resized images\n",
        "resized_data = np.zeros((data.shape[0], 3, 224, 224))\n",
        "\n",
        "# Resize each image\n",
        "for i in range(data.shape[0]):\n",
        "    for j in range(3):  # Loop over the color channels\n",
        "        resized_data[i, j] = cv2.resize(data[i, j], (224, 224))\n",
        "\n",
        "# Save the resized dataset if needed\n",
        "np.save('/content/drive/My Drive/resized_synthetic_cifar10_images.npy', resized_data)"
      ],
      "metadata": {
        "id": "9DpWmqecEKgx"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Load the dataset\n",
        "file_path = '/content/drive/My Drive/resized_synthetic_cifar10_images.npy'\n",
        "data = np.load(file_path)\n",
        "\n",
        "# Check the shape of the dataset\n",
        "print(\"Dataset shape:\", data.shape)"
      ],
      "metadata": {
        "id": "dgddtca2EQTV"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Load synthetic images and labels from Google Drive\n",
        "synthetic_images_np = np.load('/content/drive/My Drive/resized_synthetic_cifar10_images.npy')\n",
        "synthetic_labels_np = np.random.randint(0, 10, synthetic_images_np.shape[0])  # Assuming 10 classes\n",
        "\n",
        "# Convert synthetic data to PyTorch tensors\n",
        "synthetic_images = torch.tensor(synthetic_images_np)\n",
        "synthetic_labels = torch.tensor(synthetic_labels_np)\n",
        "\n",
        "# Create a custom dataset class for synthetic data\n",
        "class SyntheticCIFAR10(Dataset):\n",
        "    def __init__(self, images, labels):\n",
        "        self.images = images\n",
        "        self.labels = labels\n",
        "\n",
        "    def __len__(self):\n",
        "        return len(self.images)\n",
        "\n",
        "    def __getitem__(self, idx):\n",
        "        return {\"pixel_values\": self.images[idx], \"labels\": self.labels[idx]}\n",
        "\n",
        "synthetic_dataset = SyntheticCIFAR10(synthetic_images, synthetic_labels)\n",
        "\n",
        "# Define transformations for evaluation\n",
        "eval_transform = transforms.Compose([\n",
        "    transforms.Resize((224, 224)),\n",
        "    transforms.ToTensor(),\n",
        "    transforms.Normalize((0.5, 0.5, 0.5), (0.5, 0.5, 0.5))\n",
        "])\n",
        "\n",
        "# Load evaluation dataset\n",
        "eval_dataset = torchvision.datasets.CIFAR10(root='./data', train=False, download=True, transform=eval_transform)\n",
        "eval_dataset = CustomCIFAR10(eval_dataset)\n",
        "\n",
        "# Create subsets for evaluation\n",
        "subset_indices = list(range(100))  # Choose the first 100 samples\n",
        "eval_subset = Subset(eval_dataset, subset_indices)\n",
        "print(f'Number of items in the evaluation subset: {len(eval_subset)}')\n",
        "\n",
        "# Define constants\n",
        "NUM_CLASSES = 10  # CIFAR-10 has 10 classes\n",
        "MODEL_NAME = 'google/vit-base-patch16-224'\n",
        "OUTPUT_DIR = './results'\n",
        "LOG_DIR = './logs'\n",
        "BATCH_SIZE = 16\n",
        "NUM_EPOCHS = 10\n",
        "WEIGHT_DECAY = 0.01\n",
        "LOGGING_STEPS = 10\n",
        "\n",
        "# Load the model\n",
        "model = ViTForImageClassification.from_pretrained(\n",
        "    MODEL_NAME,\n",
        "    num_labels=NUM_CLASSES,\n",
        "    ignore_mismatched_sizes=True\n",
        ")\n",
        "\n",
        "# Define training arguments\n",
        "training_args = TrainingArguments(\n",
        "    output_dir=OUTPUT_DIR,\n",
        "    evaluation_strategy='epoch',\n",
        "    save_strategy='epoch',\n",
        "    per_device_train_batch_size=BATCH_SIZE,\n",
        "    per_device_eval_batch_size=BATCH_SIZE,\n",
        "    num_train_epochs=NUM_EPOCHS,\n",
        "    weight_decay=WEIGHT_DECAY,\n",
        "    logging_dir=LOG_DIR,\n",
        "    logging_steps=LOGGING_STEPS,\n",
        "    load_best_model_at_end=True,\n",
        "    metric_for_best_model='f1',\n",
        "    greater_is_better=True,\n",
        ")\n",
        "\n",
        "# Define data collator\n",
        "data_collator = DefaultDataCollator(return_tensors=\"pt\")\n",
        "\n",
        "def compute_metrics(eval_pred):\n",
        "    logits, labels = eval_pred\n",
        "    probabilities = softmax(logits, axis=-1)\n",
        "    predictions = np.argmax(probabilities, axis=-1)\n",
        "\n",
        "    accuracy = accuracy_score(labels, predictions)\n",
        "    precision = precision_score(labels, predictions, average='weighted', zero_division=0)\n",
        "    f1 = f1_score(labels, predictions, average='weighted')\n",
        "\n",
        "    # One-hot encode labels for AUC computation\n",
        "    labels_one_hot = np.eye(probabilities.shape[1])[labels]\n",
        "\n",
        "    # Compute AUC for multi-class\n",
        "    try:\n",
        "        auc = roc_auc_score(labels_one_hot, probabilities, multi_class='ovr', average='weighted')\n",
        "    except ValueError as e:\n",
        "        print(f\"Error computing AUC: {e}\")\n",
        "        auc = None\n",
        "\n",
        "    # Compute ROC curve for the first class as an example\n",
        "    fpr, tpr, _ = roc_curve(labels_one_hot[:, 0], probabilities[:, 0])\n",
        "\n",
        "    return {\n",
        "        'accuracy': accuracy,\n",
        "        'precision': precision,\n",
        "        'f1': f1,\n",
        "        'auc': auc,\n",
        "        'roc_curve_data': (fpr.tolist(), tpr.tolist())\n",
        "    }\n",
        "\n",
        "# Initialize the Trainer\n",
        "trainer = Trainer(\n",
        "    model=model,\n",
        "    args=training_args,\n",
        "    train_dataset=synthetic_dataset,\n",
        "    eval_dataset=eval_subset,\n",
        "    data_collator=data_collator,\n",
        "    compute_metrics=compute_metrics\n",
        ")\n",
        "\n",
        "# Train and evaluate the model\n",
        "trainer.train()\n",
        "metrics = trainer.evaluate()\n",
        "\n",
        "# Save metrics to a JSON file\n",
        "def save_metrics(metrics, filename):\n",
        "    with open(filename, 'w') as f:\n",
        "        json.dump(metrics, f, indent=4)\n",
        "\n",
        "save_metrics(metrics, 'metrics_synthetic.json')\n",
        "\n",
        "# Print the metrics in a clean format\n",
        "print(f\"Accuracy: {metrics['eval_accuracy']:.4f}\")\n",
        "print(f\"Precision: {metrics['eval_precision']:.4f}\")\n",
        "print(f\"F1 Score: {metrics['eval_f1']:.4f}\")\n",
        "print(f\"AUC: {metrics['eval_auc']:.4f}\")\n",
        "\n",
        "# Plot the ROC curve and save it to a file\n",
        "fpr, tpr = metrics['eval_roc_curve_data']\n",
        "plt.figure()\n",
        "plt.plot(fpr, tpr, color='blue', lw=2, label=f'ROC curve (AUC = {metrics[\"eval_auc\"]:.4f})')\n",
        "plt.plot([0, 1], [0, 1], color='gray', lw=2, linestyle='--')\n",
        "plt.xlabel('False Positive Rate')\n",
        "plt.ylabel('True Positive Rate')\n",
        "plt.title('Receiver Operating Characteristic (ROC) Curve')\n",
        "plt.legend(loc=\"lower right\")\n",
        "plt.savefig('./results/roc_curve_synthetic.png')  # Save the plot to a file\n",
        "plt.show()  # Display the plot"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "collapsed": true,
        "id": "REr7ZA_q24Pk",
        "outputId": "3b7b50b8-42d7-4d5d-caa5-c7080923527b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Files already downloaded and verified\n",
            "Number of items in the evaluation subset: 100\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Some weights of ViTForImageClassification were not initialized from the model checkpoint at google/vit-base-patch16-224 and are newly initialized because the shapes did not match:\n",
            "- classifier.bias: found shape torch.Size([1000]) in the checkpoint and torch.Size([10]) in the model instantiated\n",
            "- classifier.weight: found shape torch.Size([1000, 768]) in the checkpoint and torch.Size([10, 768]) in the model instantiated\n",
            "You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n",
            "/usr/local/lib/python3.10/dist-packages/transformers/training_args.py:1494: FutureWarning: `evaluation_strategy` is deprecated and will be removed in version 4.46 of 🤗 Transformers. Use `eval_strategy` instead\n",
            "  warnings.warn(\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "    <div>\n",
              "      \n",
              "      <progress value='21' max='21' style='width:300px; height:20px; vertical-align: middle;'></progress>\n",
              "      [21/21 01:02, Epoch 3/3]\n",
              "    </div>\n",
              "    <table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              " <tr style=\"text-align: left;\">\n",
              "      <th>Epoch</th>\n",
              "      <th>Training Loss</th>\n",
              "      <th>Validation Loss</th>\n",
              "      <th>Accuracy</th>\n",
              "      <th>Precision</th>\n",
              "      <th>F1</th>\n",
              "      <th>Auc</th>\n",
              "      <th>Roc Curve Data</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <td>1</td>\n",
              "      <td>No log</td>\n",
              "      <td>2.240046</td>\n",
              "      <td>0.200000</td>\n",
              "      <td>0.157085</td>\n",
              "      <td>0.171667</td>\n",
              "      <td>0.597924</td>\n",
              "      <td>([0.0, 0.011111111111111112, 0.08888888888888889, 0.08888888888888889, 0.12222222222222222, 0.12222222222222222, 0.2, 0.2, 0.23333333333333334, 0.23333333333333334, 0.28888888888888886, 0.28888888888888886, 0.35555555555555557, 0.35555555555555557, 0.4444444444444444, 0.4444444444444444, 0.7666666666666667, 0.7666666666666667, 0.8333333333333334, 0.8333333333333334, 0.9666666666666667, 0.9666666666666667, 1.0], [0.0, 0.0, 0.0, 0.1, 0.1, 0.2, 0.2, 0.3, 0.3, 0.4, 0.4, 0.5, 0.5, 0.6, 0.6, 0.7, 0.7, 0.8, 0.8, 0.9, 0.9, 1.0, 1.0])</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>2</td>\n",
              "      <td>2.222900</td>\n",
              "      <td>2.251326</td>\n",
              "      <td>0.210000</td>\n",
              "      <td>0.149642</td>\n",
              "      <td>0.171625</td>\n",
              "      <td>0.592935</td>\n",
              "      <td>([0.0, 0.011111111111111112, 0.1, 0.1, 0.16666666666666666, 0.16666666666666666, 0.2, 0.2, 0.2222222222222222, 0.2222222222222222, 0.28888888888888886, 0.28888888888888886, 0.3, 0.3, 0.5444444444444444, 0.5444444444444444, 0.6888888888888889, 0.6888888888888889, 0.8333333333333334, 0.8333333333333334, 0.9666666666666667, 0.9666666666666667, 1.0], [0.0, 0.0, 0.0, 0.1, 0.1, 0.2, 0.2, 0.3, 0.3, 0.4, 0.4, 0.5, 0.5, 0.6, 0.6, 0.7, 0.7, 0.8, 0.8, 0.9, 0.9, 1.0, 1.0])</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>3</td>\n",
              "      <td>1.656900</td>\n",
              "      <td>2.246782</td>\n",
              "      <td>0.210000</td>\n",
              "      <td>0.245660</td>\n",
              "      <td>0.183695</td>\n",
              "      <td>0.594583</td>\n",
              "      <td>([0.0, 0.011111111111111112, 0.08888888888888889, 0.08888888888888889, 0.17777777777777778, 0.17777777777777778, 0.18888888888888888, 0.18888888888888888, 0.2111111111111111, 0.2111111111111111, 0.2777777777777778, 0.2777777777777778, 0.32222222222222224, 0.32222222222222224, 0.5111111111111111, 0.5111111111111111, 0.6777777777777778, 0.6777777777777778, 0.8444444444444444, 0.8444444444444444, 0.9666666666666667, 0.9666666666666667, 1.0], [0.0, 0.0, 0.0, 0.1, 0.1, 0.2, 0.2, 0.3, 0.3, 0.4, 0.4, 0.5, 0.5, 0.6, 0.6, 0.7, 0.7, 0.8, 0.8, 0.9, 0.9, 1.0, 1.0])</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table><p>"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Trainer is attempting to log a value of \"([0.0, 0.011111111111111112, 0.08888888888888889, 0.08888888888888889, 0.12222222222222222, 0.12222222222222222, 0.2, 0.2, 0.23333333333333334, 0.23333333333333334, 0.28888888888888886, 0.28888888888888886, 0.35555555555555557, 0.35555555555555557, 0.4444444444444444, 0.4444444444444444, 0.7666666666666667, 0.7666666666666667, 0.8333333333333334, 0.8333333333333334, 0.9666666666666667, 0.9666666666666667, 1.0], [0.0, 0.0, 0.0, 0.1, 0.1, 0.2, 0.2, 0.3, 0.3, 0.4, 0.4, 0.5, 0.5, 0.6, 0.6, 0.7, 0.7, 0.8, 0.8, 0.9, 0.9, 1.0, 1.0])\" of type <class 'tuple'> for key \"eval/roc_curve_data\" as a scalar. This invocation of Tensorboard's writer.add_scalar() is incorrect so we dropped this attribute.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Shape of labels: (100,)\n",
            "Shape of probabilities: (100, 10)\n",
            "Unique labels: [0 1 2 3 4 5 6 7 8 9]\n",
            "Number of classes in model output: 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Trainer is attempting to log a value of \"([0.0, 0.011111111111111112, 0.1, 0.1, 0.16666666666666666, 0.16666666666666666, 0.2, 0.2, 0.2222222222222222, 0.2222222222222222, 0.28888888888888886, 0.28888888888888886, 0.3, 0.3, 0.5444444444444444, 0.5444444444444444, 0.6888888888888889, 0.6888888888888889, 0.8333333333333334, 0.8333333333333334, 0.9666666666666667, 0.9666666666666667, 1.0], [0.0, 0.0, 0.0, 0.1, 0.1, 0.2, 0.2, 0.3, 0.3, 0.4, 0.4, 0.5, 0.5, 0.6, 0.6, 0.7, 0.7, 0.8, 0.8, 0.9, 0.9, 1.0, 1.0])\" of type <class 'tuple'> for key \"eval/roc_curve_data\" as a scalar. This invocation of Tensorboard's writer.add_scalar() is incorrect so we dropped this attribute.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Shape of labels: (100,)\n",
            "Shape of probabilities: (100, 10)\n",
            "Unique labels: [0 1 2 3 4 5 6 7 8 9]\n",
            "Number of classes in model output: 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Trainer is attempting to log a value of \"([0.0, 0.011111111111111112, 0.08888888888888889, 0.08888888888888889, 0.17777777777777778, 0.17777777777777778, 0.18888888888888888, 0.18888888888888888, 0.2111111111111111, 0.2111111111111111, 0.2777777777777778, 0.2777777777777778, 0.32222222222222224, 0.32222222222222224, 0.5111111111111111, 0.5111111111111111, 0.6777777777777778, 0.6777777777777778, 0.8444444444444444, 0.8444444444444444, 0.9666666666666667, 0.9666666666666667, 1.0], [0.0, 0.0, 0.0, 0.1, 0.1, 0.2, 0.2, 0.3, 0.3, 0.4, 0.4, 0.5, 0.5, 0.6, 0.6, 0.7, 0.7, 0.8, 0.8, 0.9, 0.9, 1.0, 1.0])\" of type <class 'tuple'> for key \"eval/roc_curve_data\" as a scalar. This invocation of Tensorboard's writer.add_scalar() is incorrect so we dropped this attribute.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Shape of labels: (100,)\n",
            "Shape of probabilities: (100, 10)\n",
            "Unique labels: [0 1 2 3 4 5 6 7 8 9]\n",
            "Number of classes in model output: 10\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "    <div>\n",
              "      \n",
              "      <progress value='7' max='7' style='width:300px; height:20px; vertical-align: middle;'></progress>\n",
              "      [7/7 00:00]\n",
              "    </div>\n",
              "    "
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Trainer is attempting to log a value of \"([0.0, 0.011111111111111112, 0.08888888888888889, 0.08888888888888889, 0.17777777777777778, 0.17777777777777778, 0.18888888888888888, 0.18888888888888888, 0.2111111111111111, 0.2111111111111111, 0.2777777777777778, 0.2777777777777778, 0.32222222222222224, 0.32222222222222224, 0.5111111111111111, 0.5111111111111111, 0.6777777777777778, 0.6777777777777778, 0.8444444444444444, 0.8444444444444444, 0.9666666666666667, 0.9666666666666667, 1.0], [0.0, 0.0, 0.0, 0.1, 0.1, 0.2, 0.2, 0.3, 0.3, 0.4, 0.4, 0.5, 0.5, 0.6, 0.6, 0.7, 0.7, 0.8, 0.8, 0.9, 0.9, 1.0, 1.0])\" of type <class 'tuple'> for key \"eval/roc_curve_data\" as a scalar. This invocation of Tensorboard's writer.add_scalar() is incorrect so we dropped this attribute.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Shape of labels: (100,)\n",
            "Shape of probabilities: (100, 10)\n",
            "Unique labels: [0 1 2 3 4 5 6 7 8 9]\n",
            "Number of classes in model output: 10\n",
            "Accuracy: 0.2100\n",
            "Precision: 0.2457\n",
            "F1 Score: 0.1837\n",
            "AUC: 0.5946\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "***Hybrid dataset***"
      ],
      "metadata": {
        "id": "j3nqbqDJ3vPZ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Load synthetic images and labels from Google Drive\n",
        "synthetic_images_np = np.load('/content/drive/My Drive/resized_synthetic_cifar10_images.npy')\n",
        "synthetic_labels_np = np.random.randint(0, 10, synthetic_images_np.shape[0])\n",
        "\n",
        "# Convert synthetic data to PyTorch tensors\n",
        "synthetic_images = torch.tensor(synthetic_images_np)\n",
        "synthetic_labels = torch.tensor(synthetic_labels_np)\n",
        "\n",
        "# Create a custom dataset class for synthetic data\n",
        "class SyntheticCIFAR10(Dataset):\n",
        "    def __init__(self, images, labels):\n",
        "        self.images = images\n",
        "        self.labels = labels\n",
        "\n",
        "    def __len__(self):\n",
        "        return len(self.images)\n",
        "\n",
        "    def __getitem__(self, idx):\n",
        "        return self.images[idx], self.labels[idx]\n",
        "\n",
        "synthetic_dataset = SyntheticCIFAR10(synthetic_images, synthetic_labels)\n",
        "\n",
        "# Define transformations for original dataset\n",
        "transform = transforms.Compose([\n",
        "    transforms.Resize((224, 224)),\n",
        "    transforms.ToTensor(),\n",
        "    transforms.Normalize((0.5, 0.5, 0.5), (0.5, 0.5, 0.5))\n",
        "])\n",
        "\n",
        "# Load original CIFAR-10 dataset\n",
        "train_dataset = torchvision.datasets.CIFAR10(root='./data', train=True, download=True, transform=transform)\n",
        "\n",
        "# Create subsets for original and synthetic datasets\n",
        "subset_indices = list(range(100))  # Choose the first 100 samples\n",
        "train_subset = Subset(train_dataset, subset_indices)\n",
        "synthetic_subset = Subset(synthetic_dataset, subset_indices)\n",
        "\n",
        "# Create a hybrid dataset by combining original and synthetic datasets\n",
        "hybrid_dataset = ConcatDataset([train_subset, synthetic_subset])\n",
        "\n",
        "# Define transformations for evaluation\n",
        "eval_transform = transforms.Compose([\n",
        "    transforms.Resize((224, 224)),\n",
        "    transforms.ToTensor(),\n",
        "    transforms.Normalize((0.5, 0.5, 0.5), (0.5, 0.5, 0.5))\n",
        "])\n",
        "\n",
        "# Load evaluation dataset\n",
        "eval_dataset = torchvision.datasets.CIFAR10(root='./data', train=False, download=True, transform=eval_transform)\n",
        "\n",
        "# Create subsets for evaluation\n",
        "eval_subset = Subset(eval_dataset, subset_indices)\n",
        "print(f'Number of items in the evaluation subset: {len(eval_subset)}')\n",
        "\n",
        "# Define constants\n",
        "NUM_CLASSES = 10  # CIFAR-10 has 10 classes\n",
        "MODEL_NAME = 'google/vit-base-patch16-224'\n",
        "OUTPUT_DIR = './results'\n",
        "LOG_DIR = './logs'\n",
        "BATCH_SIZE = 16\n",
        "NUM_EPOCHS = 10\n",
        "WEIGHT_DECAY = 0.01\n",
        "LOGGING_STEPS = 10\n",
        "\n",
        "# Load the model\n",
        "model = ViTForImageClassification.from_pretrained(\n",
        "    MODEL_NAME,\n",
        "    num_labels=NUM_CLASSES,\n",
        "    ignore_mismatched_sizes=True\n",
        ")\n",
        "\n",
        "# Define training arguments\n",
        "training_args = TrainingArguments(\n",
        "    output_dir=OUTPUT_DIR,\n",
        "    evaluation_strategy='epoch',\n",
        "    save_strategy='epoch',\n",
        "    per_device_train_batch_size=BATCH_SIZE,\n",
        "    per_device_eval_batch_size=BATCH_SIZE,\n",
        "    num_train_epochs=NUM_EPOCHS,\n",
        "    weight_decay=WEIGHT_DECAY,\n",
        "    logging_dir=LOG_DIR,\n",
        "    logging_steps=LOGGING_STEPS,\n",
        "    load_best_model_at_end=True,\n",
        "    metric_for_best_model='f1',\n",
        "    greater_is_better=True,\n",
        ")\n",
        "\n",
        "# Custom data collator\n",
        "class CustomDataCollator:\n",
        "    def __call__(self, features):\n",
        "        pixel_values = torch.stack([f[0] for f in features])  # Access the first element of the tuple\n",
        "        labels = torch.tensor([f[1] for f in features])       # Access the second element of the tuple\n",
        "        return {\"pixel_values\": pixel_values, \"labels\": labels}\n",
        "\n",
        "data_collator = CustomDataCollator()\n",
        "\n",
        "def compute_metrics(eval_pred):\n",
        "    logits, labels = eval_pred\n",
        "    probabilities = softmax(logits, axis=-1)\n",
        "    predictions = np.argmax(probabilities, axis=-1)\n",
        "\n",
        "    accuracy = accuracy_score(labels, predictions)\n",
        "    precision = precision_score(labels, predictions, average='weighted', zero_division=0)\n",
        "    f1 = f1_score(labels, predictions, average='weighted')\n",
        "\n",
        "    # Debug information\n",
        "    print(f\"Shape of labels: {labels.shape}\")\n",
        "    print(f\"Shape of probabilities: {probabilities.shape}\")\n",
        "    print(f\"Unique labels: {np.unique(labels)}\")\n",
        "    print(f\"Number of classes in model output: {probabilities.shape[1]}\")\n",
        "\n",
        "    # Ensure labels are in the correct range\n",
        "    if labels.max() >= probabilities.shape[1]:\n",
        "        print(\"Warning: Some labels are out of range. Adjusting...\")\n",
        "        labels = np.clip(labels, 0, probabilities.shape[1] - 1)\n",
        "\n",
        "    # One-hot encode labels for AUC computation\n",
        "    labels_one_hot = np.eye(probabilities.shape[1])[labels]\n",
        "\n",
        "    # Compute AUC for multi-class\n",
        "    try:\n",
        "        auc = roc_auc_score(labels_one_hot, probabilities, multi_class='ovr', average='weighted')\n",
        "    except ValueError as e:\n",
        "        print(f\"Error computing AUC: {e}\")\n",
        "        auc = None\n",
        "\n",
        "    # Compute ROC curve for the first class as an example\n",
        "    fpr, tpr, _ = roc_curve(labels_one_hot[:, 0], probabilities[:, 0])\n",
        "\n",
        "    return {\n",
        "        'accuracy': accuracy,\n",
        "        'precision': precision,\n",
        "        'f1': f1,\n",
        "        'auc': auc,\n",
        "        'roc_curve_data': (fpr.tolist(), tpr.tolist())\n",
        "    }\n",
        "\n",
        "# Initialize the Trainer\n",
        "trainer = Trainer(\n",
        "    model=model,\n",
        "    args=training_args,\n",
        "    train_dataset=hybrid_dataset,\n",
        "    eval_dataset=eval_subset,\n",
        "    data_collator=data_collator,\n",
        "    compute_metrics=compute_metrics\n",
        ")\n",
        "\n",
        "# Train and evaluate the model\n",
        "trainer.train()\n",
        "metrics = trainer.evaluate()\n",
        "\n",
        "# Save metrics to a JSON file\n",
        "def save_metrics(metrics, filename):\n",
        "    with open(filename, 'w') as f:\n",
        "        json.dump(metrics, f, indent=4)\n",
        "\n",
        "save_metrics(metrics, 'metrics_hybrid.json')  # Change the filename for different datasets\n",
        "\n",
        "# Print the metrics in a clean format\n",
        "print(f\"Accuracy: {metrics['eval_accuracy']:.4f}\")\n",
        "print(f\"Precision: {metrics['eval_precision']:.4f}\")\n",
        "print(f\"F1 Score: {metrics['eval_f1']:.4f}\")\n",
        "print(f\"AUC: {metrics['eval_auc']:.4f}\")\n",
        "\n",
        "# Plot the ROC curve and save it to a file\n",
        "fpr, tpr = metrics['eval_roc_curve_data']\n",
        "plt.figure()\n",
        "plt.plot(fpr, tpr, color='blue', lw=2, label=f'ROC curve (AUC = {metrics[\"eval_auc\"]:.4f})')\n",
        "plt.plot([0, 1], [0, 1], color='gray', lw=2, linestyle='--')\n",
        "plt.xlabel('False Positive Rate')\n",
        "plt.ylabel('True Positive Rate')\n",
        "plt.title('Receiver Operating Characteristic (ROC) Curve')\n",
        "plt.legend(loc=\"lower right\")\n",
        "plt.savefig('./results/roc_curve_hybrid.png')  # Save the plot to a file\n",
        "plt.show()  # Display the plot\n"
      ],
      "metadata": {
        "id": "pz5HtEvn3Esx"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "***Final comparison***"
      ],
      "metadata": {
        "id": "6MvFcA0Tzisq"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "K9NMpxNyhQBz",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "ce70788b-1e54-4845-dc8a-64ae0bcb41cf"
      },
      "outputs": [
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Metric     Original   Generated  Hybrid    \n",
            "========================================\n",
            "accuracy   0.9710     0.2100     0.8300    \n",
            "precision  0.9713     0.2457     0.8695    \n",
            "f1         0.9710     0.1837     0.8315    \n",
            "auc        0.9990     0.5946     0.9824    \n"
          ]
        },
        {
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Metric     Original   Generated  Hybrid    \n",
            "========================================\n",
            "accuracy   0.9710     0.2100     0.8300    \n",
            "precision  0.9713     0.2457     0.8695    \n",
            "f1         0.9710     0.1837     0.8315    \n",
            "auc        0.9990     0.5946     0.9824    \n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "import json\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Function to load metrics from a JSON file\n",
        "def load_metrics(filename):\n",
        "    with open(filename, 'r') as f:\n",
        "        return json.load(f)\n",
        "\n",
        "# Load metrics from JSON files\n",
        "metrics_original = load_metrics('metrics_original.json')\n",
        "metrics_generated = load_metrics('metrics_synthetic.json')\n",
        "metrics_hybrid = load_metrics('metrics_hybrid.json')\n",
        "\n",
        "# Function to print and compare metrics\n",
        "def compare_metrics(metrics_original, metrics_generated, metrics_hybrid):\n",
        "    metrics = ['accuracy', 'precision', 'f1', 'auc']\n",
        "    print(f\"{'Metric':<10} {'Original':<10} {'Generated':<10} {'Hybrid':<10}\")\n",
        "    print(\"=\"*40)\n",
        "    for metric in metrics:\n",
        "        original_value = metrics_original.get(f'eval_{metric}', 'N/A')\n",
        "        generated_value = metrics_generated.get(f'eval_{metric}', 'N/A')\n",
        "        hybrid_value = metrics_hybrid.get(f'eval_{metric}', 'N/A')\n",
        "        print(f\"{metric:<10} {original_value:<10.4f} {generated_value:<10.4f} {hybrid_value:<10.4f}\")\n",
        "\n",
        "# Compare and print the metrics\n",
        "compare_metrics(metrics_original, metrics_generated, metrics_hybrid)\n",
        "\n",
        "# Function to plot ROC curves\n",
        "def plot_roc_curves(metrics_original, metrics_generated, metrics_hybrid):\n",
        "    plt.figure()\n",
        "\n",
        "    # Plot ROC curve for original dataset\n",
        "    fpr, tpr = metrics_original['eval_roc_curve_data']\n",
        "    plt.plot(fpr, tpr, label=f'Original (AUC = {metrics_original[\"eval_auc\"]:.4f})')\n",
        "\n",
        "    # Plot ROC curve for generated dataset\n",
        "    fpr, tpr = metrics_generated['eval_roc_curve_data']\n",
        "    plt.plot(fpr, tpr, label=f'Generated (AUC = {metrics_generated[\"eval_auc\"]:.4f})')\n",
        "\n",
        "    # Plot ROC curve for hybrid dataset\n",
        "    fpr, tpr = metrics_hybrid['eval_roc_curve_data']\n",
        "    plt.plot(fpr, tpr, label=f'Hybrid (AUC = {metrics_hybrid[\"eval_auc\"]:.4f})')\n",
        "\n",
        "    plt.plot([0, 1], [0, 1], color='gray', lw=2, linestyle='--')\n",
        "    plt.xlabel('False Positive Rate')\n",
        "    plt.ylabel('True Positive Rate')\n",
        "    plt.title('Receiver Operating Characteristic (ROC) Curve')\n",
        "    plt.legend(loc=\"lower right\")\n",
        "    plt.savefig('./results/roc_curve_comparison.png')  # Save the plot to a file\n",
        "    plt.show()  # Display the plot\n",
        "\n",
        "# Plot and compare ROC curves\n",
        "plot_roc_curves(metrics_original, metrics_generated, metrics_hybrid)\n"
      ]
    }
  ],
  "metadata": {
    "accelerator": "GPU",
    "colab": {
      "gpuType": "T4",
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}